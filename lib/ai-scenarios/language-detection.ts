const SUPPORTED_LOCALES = new Set(["en", "ms", "zh"]);
const HAN_CHARACTER_REGEX = /[\u3400-\u9FFF]/;

export const MALAY_KEYWORDS = [
  "saya",
  "anda",
  "awak",
  "kamu",
  "kita",
  "kami",
  "tidak",
  "tak",
  "boleh",
  "kerana",
  "sebab",
  "bagaimana",
  "kenapa",
  "mengapa",
  "terima kasih",
  "tolong",
  "selamat",
  "harap",
  "maaf",
  "mungkin",
  "jangan",
  "akan",
  "perlu",
  "suka",
  "benci",
  "betul",
  "salah",
  "sangat",
  "ada",
  "mahu",
  "ingin",
  "mau",
  "nak",
  "buat",
  "kata",
  "cakap",
  "tahu",
  "faham",
  "tanya",
  "jawab",
  "minta",
  "ini",
  "itu",
  "dia",
  "mereka",
  "siapa",
  "apa",
  "bila",
  "mana",
  "ya",
  "sudah",
  "dah",
  "belum",
  "pun",
  "juga",
  "atau",
  "dan",
  "tetapi",
  "tapi",
  "dengan",
  "untuk",
  "dari",
  "ke",
  "pada",
  "baik",
  "buruk",
  "cantik",
  "sihat",
  "sakit",
  "penting",
  "susah",
  "senang",
  "mudah",
  "kesihatan",
  "perlindungan",
  "bahaya",
  "risiko",
  "hendak",
  "kalau",
  "macam",
  "mcm",
  "punya",
  "lagi",
  "masa",
  "semua",
  "orang",
  "banyak",
  "sedikit",
  "besar",
  "kecil",
  "baru",
  "lama",
  "balik",
  "pergi",
  "datang",
  "dapat",
  "paham",
  "rasa",
  "fikir",
  "ingat",
  "lupa",
  "cuba",
  "coba",
  "lihat",
  "tengok",
  "dengar",
  "baca",
  "tulis",
  "main",
  "kerja",
  "makan",
  "minum",
  "tidur",
  "bangun",
  "jalan",
  "lari",
  "duduk",
  "berdiri",
  "tunggu",
  "cari",
  "jumpa",
  "temu",
  "kawan",
  "sahabat",
  "rakan",
  "ibu",
  "bapa",
  "adik",
  "abang",
  "kakak",
  "keluarga",
  "rumah",
  "sekolah",
  "kelas",
  "guru",
  "pelajar",
  "belajar",
  "ajar",
  "ujian",
  "peperiksaan",
  "pagi",
  "petang",
  "malam",
  "hari",
  "minggu",
  "bulan",
  "tahun",
  "sekarang",
  "nanti",
  "esok",
  "semalam",
  "kemarin",
  "tadi",
  "lambat",
  "awal",
  "cepat",
  "perlahan",
  "pantas",
  "benar",
  "bohong",
  "jujur",
  "percaya",
  "yakin",
  "ragu",
  "takut",
  "berani",
  "sedih",
  "gembira",
  "happy",
  "susah hati",
  "kecewa",
  "marah",
  "bimbang",
  "risau",
  "seronok",
  "geram",
  "malu",
  "bangga",
  "kasih",
  "sayang",
  "cinta",
  "beza",
  "sama",
  "lain",
  "selalu",
  "jarang",
  "kadang",
  "sekali",
  "dua",
  "tiga",
  "satu",
  "kali",
  "pernah",
  "harus",
  "mesti",
  "wajib",
  "patut",
  "sepatutnya",
  "bolehkah",
  "adakah",
  "mestikah",
  "ok",
  "okay",
  "baiklah",
  "nah",
  "lah",
  "kan",
  "kah",
  "jom",
  "meh",
  "weh",
  "eh",
  "erm",
  "hmm",
  "jangkitan",
  "seksual",
  "kondom",
  "hubungan",
  "seks",
  "kelamin",
  "hiv",
  "aids",
  "gonore",
  "gonorea",
  "sifilis",
  "klamidia",
  "chlamydia",
  "herpes",
  "hpv",
  "hepatitis",
  "penyakit",
  "berjangkit",
  "menular",
  "pencegahan",
  "rawatan",
  "ujian saringan",
  "doktor",
  "klinik",
  "hospital",
  "ubat",
  "antibiotik",
  "vaksin",
  "imunisasi",
  "tanda",
  "gejala",
  "simptom",
  "kesan",
  "akibat",
  "berpunca",
  "menyebabkan",
  "dijangkiti",
  "terdedah",
  "melindungi",
  "selamat",
  "berhati-hati",
  "berjaga-jaga",
  "bertanggungjawab",
  "tanggungjawab",
  "persetujuan",
  "setuju",
  "kerelaan",
  "paksa",
  "dipaksa",
  "paksaan",
  "tekanan",
  "rakan taulan",
  "teman lelaki",
  "teman wanita",
  "pasangan",
  "berpacaran",
  "bercinta",
  "intim",
  "keintiman",
  "sentuhan",
  "fizikal",
  "badan",
  "alat kelamin",
  "kemaluan",
  "zakar",
  "faraj",
  "vagina",
  "penis",
  "rahim",
  "payudara",
  "testis",
  "buah zakar",
  "remaja",
  "dewasa",
  "puberti",
  "akil baligh",
  "haid",
  "datang bulan",
  "menstruasi",
  "hamil",
  "kehamilan",
  "mengandung",
  "pregnant",
  "kandungan",
  "kontraseptif",
  "pencegah",
  "pil perancang",
  "keselamatan",
  "sedar",
  "pengetahuan",
  "maklumat",
  "informasi",
  "tanya doktor",
  "nasihat",
  "bimbingan",
  "sokongan",
  "bantuan",
  "rahsia",
  "sulit",
  "privacy",
  "peribadi",
  "hormon",
  "reproduktif",
  "kesuburan",
  "steril",
];

export type SupportedLocale = "en" | "ms" | "zh";

export function normaliseLocaleCode(raw: unknown): SupportedLocale | undefined {
  if (typeof raw !== "string") return undefined;
  const trimmed = raw.trim().toLowerCase();
  if (!trimmed) return undefined;
  if (SUPPORTED_LOCALES.has(trimmed as SupportedLocale)) {
    return trimmed as SupportedLocale;
  }
  if (trimmed.startsWith("zh")) return "zh";
  if (trimmed.startsWith("ms") || trimmed.startsWith("id")) return "ms";
  if (trimmed.startsWith("en")) return "en";
  return undefined;
}

export function detectLocaleFromMessage(message: string): SupportedLocale | undefined {
  const content = message.trim();
  if (!content) return undefined;

  if (HAN_CHARACTER_REGEX.test(content)) {
    return "zh";
  }

  const lower = content.toLowerCase();
  const hasMalayKeyword = MALAY_KEYWORDS.some((keyword) => lower.includes(keyword));
  if (hasMalayKeyword) {
    return "ms";
  }

  if (/[a-zA-Z]/.test(content)) {
    return "en";
  }

  return undefined;
}

export function determineEffectiveLocale(params: {
  message?: string;
  localeOverride?: string;
  sessionLocale?: string | null;
}): SupportedLocale | undefined {
  const { message, localeOverride, sessionLocale } = params;
  
  // 1. Try to detect from message content
  if (message) {
    const detectedLocale = detectLocaleFromMessage(message);
    if (detectedLocale) return detectedLocale;
  }
  
  // 2. Use override if provided
  const normalizedOverride = normaliseLocaleCode(localeOverride);
  if (normalizedOverride) return normalizedOverride;
  
  // 3. Fall back to session locale
  return normaliseLocaleCode(sessionLocale);
}